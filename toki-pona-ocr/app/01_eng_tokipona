import streamlit as st
import random

# Dictionary mapping sitelen pona symbols to their Toki Pona words
# Note: In practice, you would use actual sitelen pona symbols
SITELEN_TO_WORD = {
    "üó£Ô∏è": "mi",      # represents person speaking
    "üëâ": "sina",    # represents pointing to other
    "üë§": "ona",     # represents person
    "üìç": "ni",      # represents this/that
    "‚ú®": "pona",    # represents good
    "üíî": "ike",     # represents bad
    "‚¨ÜÔ∏è": "suli",    # represents big
    "‚¨áÔ∏è": "lili",    # represents small
    "‚û°Ô∏è": "tawa",    # represents movement
    "üè†": "tomo",    # represents house/building
    "üë•": "jan",     # represents person/human
    "üí≠": "wile",    # represents want/need
    "üìö": "sona",    # represents knowledge
    "üëÄ": "lukin",   # represents seeing/looking
    "üîÑ": "kepeken"  # represents using/with
}

def change_character():
    """Change the current sitelen pona symbol."""
    st.session_state.character = random.choice(list(SITELEN_TO_WORD.keys()))
    return

def change_mode(new_mode: str) -> None:
    """Update the mode and change the character."""
    st.session_state.mode = new_mode
    st.session_state.character = random.choice(list(SITELEN_TO_WORD.keys()))
    return

# Page configuration
st.set_page_config(
    page_title="sitelen tawa nimi",
    page_icon="üìù")

# Page title and description
st.title("üìù o kama sona e sitelen pona!")  # Learn sitelen pona
st.subheader("o lukin e sitelen ni!")  # Look at these symbols
st.divider()

# Initialize session state variables
if 'mode' not in st.session_state:
    st.session_state.mode = None
if "character" not in st.session_state:
    st.session_state.character = random.choice(list(SITELEN_TO_WORD.keys()))

# Select mode
new_mode = st.radio(
    "sina wile kama sona e seme?",  # What do you want to practice?
    ["nimi lili", "nimi suli"],  # Basic words, Advanced words
    horizontal=True
)

# Change mode if a new mode is selected
if new_mode != st.session_state.mode:
    change_mode(new_mode)

if st.session_state.mode is not None:
    # Display the current sitelen pona symbol
    st.subheader(st.session_state.character)
    
    # Button to generate a new symbol
    st.button("o ante e sitelen", on_click=change_character)  # Change symbol
    
    # Input and validation
    st.write("o sitelen e nimi lon poka anpa:")  # Write the word below
    
    with st.form("nimi_form"):
        # User input
        user_word = st.text_input("o sitelen e nimi", "")  # Write the word
        user_word_lower = user_word.lower()
        
        # Submit button
        submitted = st.form_submit_button("pana")  # Submit
        
        if submitted:
            # Check if the user input matches the expected word
            correct_word = SITELEN_TO_WORD.get(st.session_state.character)
            if user_word_lower == correct_word:
                st.success(f'pona! sitelen ni li nimi "{correct_word}"!', icon="‚úÖ")  # Correct!
                st.balloons()
            else:
                st.error(f'ike. sitelen ni li nimi "{correct_word}". sina toki e "{user_word_lower}"', icon="üö®")  # Incorrect

# Footer with helpful information
st.divider()
st.markdown("""
    üí° **sona pona:**
    - o lukin pona e sitelen
    - o toki e nimi sina
    - o kepeken nimi lili taso
    """)